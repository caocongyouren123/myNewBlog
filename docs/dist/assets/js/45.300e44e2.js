(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{399:function(v,_,t){"use strict";t.r(_);var s=t(0),e=Object(s.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("Boxx"),v._v(" "),t("h2",{attrs:{id:"第一天"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第一天"}},[v._v("#")]),v._v(" 第一天")]),v._v(" "),t("p",[v._v("::: details 1. 分页怎么实现的")]),v._v(" "),t("ul",[t("li",[v._v("Mysql分页使用limit："),t("code",[v._v("select 列名 from 表名 limit 10,10;")])]),v._v(" "),t("li",[v._v("Oracle分页使用rownum："),t("code",[v._v("select a.* from (select rownum rw, 列名 from 表名 where 条件) a where a.rw>数字 and a.rw<=y;")])])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 2. sql语句优化")]),v._v(" "),t("ol",[t("li",[v._v("合理使用索引")]),v._v(" "),t("li",[v._v("用exists代替in，exists是直接判断存不存在，而in会挨个比较")]),v._v(" "),t("li",[v._v("复杂的业务功能可以使用存储过程")]),v._v(" "),t("li",[v._v("应尽量避免在 where 子句中使用"),t("code",[v._v("!=")]),v._v("、"),t("code",[v._v("<>")]),v._v("、"),t("code",[v._v("or")]),v._v("、"),t("code",[v._v("in")]),v._v("、"),t("code",[v._v("not in")]),v._v("操作符，否则将引擎放弃使用索引而进行全表扫描")]),v._v(" "),t("li",[v._v("能多表关联的尽量不写子查询")]),v._v(" "),t("li",[v._v("避免%xxx式查询，前置%查询会导致查全表")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 3. Oracle中drop 和truncate的区别？")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("drop是删除表")]),v._v("，"),t("code",[v._v("不会释放表原先占有的内存空间")]),v._v("；")]),v._v(" "),t("li",[t("strong",[v._v("truncate是截断表")]),v._v("，"),t("code",[v._v("能够释放表中数据所占有的内存空间，保留表结构")]),v._v("；")])]),v._v(" "),t("p",[v._v("如果使用drop table 表名 purge;语句则能够直接释放表占有的内存空间。")]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 4. 左外连接，右外连接，说一下?")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("左外连接：from 原表 left join 新表 on 关联关系"),t("br"),v._v(" "),t("code",[v._v("原表和新表能够关联的数据+无法通过关联关系关联到原表的数据")])])]),v._v(" "),t("li",[t("p",[v._v("右外连接：from 原表 right join 新表 on 关联关系"),t("br"),v._v(" "),t("code",[v._v("原表和新表能够关联的数据+无法通过关联关系关联到新表的数据")])])])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 5. sql语句中怎么判断一个字段是不是空")]),v._v(" "),t("p",[v._v("与空判断使用"),t("code",[v._v("is null")]),v._v("或者"),t("code",[v._v("is not null")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 6. 数据源、数据库连接池、DBCP三者的关系？")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("数据源")]),v._v("：是连接数据库的一个"),t("u",[v._v("标准")])]),v._v(" "),t("li",[t("strong",[v._v("数据库")]),v._v("：连接池是实现数据源的一种"),t("u",[v._v("解决方案")])]),v._v(" "),t("li",[t("strong",[v._v("DBCP")]),v._v("：是连接池的"),t("u",[v._v("具体实现")])])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("h2",{attrs:{id:"第二天"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第二天"}},[v._v("#")]),v._v(" 第二天")]),v._v(" "),t("p",[v._v("::: details 1. Mysql和Oracle的区别")]),v._v(" "),t("ol",[t("li",[v._v("Oracle使用rownum来实现分页，MySQL使用limit实现"),t("strong",[v._v("分页")])])]),v._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("-- - mysql查询行号")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("select")]),v._v(" \n\tw"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v("\n\t"),t("span",{pre:!0,attrs:{class:"token variable"}},[v._v("@rowno")]),v._v(" :"),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[v._v("@rowno")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("+")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("1")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("AS")]),v._v(" rowno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("-- 查到当前这一行的行号")]),v._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("CASE")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("WHEN")]),v._v(" w"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("ID "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[v._v("'123456'")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("THEN")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[v._v("@rowno")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("END")]),v._v(" currentrowno \n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("from")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("table")]),v._v(" w "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("order")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("by")]),v._v(" w"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("rowno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br"),t("span",{staticClass:"line-number"},[v._v("6")]),t("br"),t("span",{staticClass:"line-number"},[v._v("7")]),t("br"),t("span",{staticClass:"line-number"},[v._v("8")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[v._v("Oracle没有主键自增特性,可以使用调用序列的方式来实现主键自增；MySQL可以在主键列之后添加auto_increment设置"),t("strong",[v._v("自增特性")])]),v._v(" "),t("li",[v._v("Oracle有表空间的概念，MySQL没有"),t("strong",[v._v("表空间")])]),v._v(" "),t("li",[v._v("Oracle的"),t("strong",[v._v("分组函数")]),v._v("中select之后不能直接写非分组的其他列；MySQL如果没有聚组函数则可以写 其他列")]),v._v(" "),t("li",[v._v("Oracle的表存放在用户（其实是schema对象）所属的表空间的数据文件中，\n   mySQL的表存放在某个database中（mysql一个root用户下可以有很多database）")]),v._v(" "),t("li",[v._v("Oracle中的一些函数和MySQL也不一样\n如："),t("code",[v._v("ORACLE：substr('abcd',2,2) ，MYSQL：substring('abcd',2,2)")]),v._v(","),t("code",[v._v("ORACLE：to_char(sysdate,'yyyy-mm-dd') ，MYSQL：date_format(now(),'%Y-%m-%d')")])]),v._v(" "),t("li",[v._v("Oracle中的字符类型可以使用"),t("strong",[v._v("varchar2")]),v._v("，MySQL不能使用该类型")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 2. jdbc怎样执行sql语句？")]),v._v(" "),t("ol",[t("li",[v._v("加载驱动")]),v._v(" "),t("li",[v._v("通过驱动管理对象获得连接")]),v._v(" "),t("li",[v._v("获得执行器对象编写SQL语句,JAVA中用String类型表示SQL")]),v._v(" "),t("li",[v._v("通过执行器执行SQL语句"),t("br"),v._v("\n常用的执行SQL语句的方法有:\n "),t("code",[v._v("execute()")]),v._v("  boolean (执行select语句时返回true,因为select能够返回一个查询结果 其他命令开头的语句返回false)；\n"),t("code",[v._v("executeUpdate()")]),v._v("  int；\n"),t("code",[v._v("executeQuery()")]),v._v("   ResultSet")]),v._v(" "),t("li",[v._v("释放资源")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 3. 索引用过吗？在什么情况下会导致索引失效？用索引还需要注意哪些问题呢？索引分为几种？")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("用过；如果有索引的列空值比较多、重复数据比较多的话索引不起作用。\n  通常索引用在查询较多而增删改较少的列，因为索引也会花时间自己维护会降低增删改的效率。")])]),v._v(" "),t("li",[t("p",[v._v("常用的索引有"),t("strong",[v._v("普通索引、唯一性索引、位图索引")]),v._v("，如果某个列上经常使用函数，还可以建一个函数索引。")])])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 4. like 用过吗？怎么用的？")]),v._v(" "),t("p",[v._v("like常用来实现模糊查询，与%和_匹配使用，如果需要匹配特殊字符，则需要使用"),t("strong",[v._v("escape")]),v._v("逃离符。"),t("br"),v._v("\n例:搜索以“QA_”开头的数据："),t("code",[v._v("select code from 表 where code like 'QA/_%' escape '/'")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 5. union 和union all的区别")]),v._v(" "),t("ul",[t("li",[v._v("都是取并集，可以用来代替 or")])]),v._v(" "),t("p",[v._v("例如：有{1，2，3}和{2，3，4}"),t("br"),v._v(" "),t("strong",[v._v("union 能够去除重复数据")]),v._v(" (做排序操作)（1，2，3，4）"),t("br"),v._v(" "),t("strong",[v._v("union all 不会做去重操作 效率高")]),v._v(" （1，2，2，3，3，4）")]),v._v(" "),t("ul",[t("li",[v._v("多个查询语句必须有相同的列数"),t("br"),v._v("\n多个查询语句中的列对应的数据类型必须一致"),t("br"),v._v("\n如："),t("code",[v._v("select ename,job from emp01   union   select ename,job from emp02;")])])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 6. 事务的特性")]),v._v(" "),t("ul",[t("li",[v._v("事务四大特性(简称ACID)")])]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("原子性(Atomicity)：")]),v._v(" 事务中的全部操作在数据库中是不可分割的，要么全部完成，要么均不执行。")]),v._v(" "),t("li",[t("strong",[v._v("一致性(Consistency)：")]),v._v(" 事务必须是使数据库从一个一致性状态变到另一个一致性状态。一致性与原子性是密切相关的。")]),v._v(" "),t("li",[t("strong",[v._v("隔离性(Isolation)：")]),v._v(" 事务的执行不受其他事务的干扰。")]),v._v(" "),t("li",[t("strong",[v._v("持久性(Durability)：")]),v._v(" 能够将提交的数据持久化到数据库中。")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 7. 什么是事务？特征？JDBC如何控制事务？")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("多条sql语句作为 一个执行单元，要么全部执行，要么全不执行")])]),v._v(" "),t("li",[t("p",[v._v("四大特性："),t("strong",[v._v("原子性，一致性，隔离性，持久性")])])]),v._v(" "),t("li",[t("p",[v._v("JDBC控制事务：")]),v._v(" "),t("ul",[t("li",[v._v("开始事务：connection.setAutoCommit(false);")]),v._v(" "),t("li",[v._v("执行sql语句")]),v._v(" "),t("li",[v._v("提交:connection.commit();")]),v._v(" "),t("li",[v._v("回滚：Connection.rollback();")])])])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("h2",{attrs:{id:"第三天"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第三天"}},[v._v("#")]),v._v(" 第三天")]),v._v(" "),t("p",[v._v("::: details 1. 存储过程、视图、触发器")]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("存储过程 procedure：")]),v._v(" 在服务器端，能够被多个程序调用的一段SQL语句块。"),t("br"),v._v("\n简单来说就是事先用数据库语言写好的一段功能，能够像函数一样被程序调用，但是存储过程本身没有返回值，是通过返回参数的形式返回数据。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("视图 View ：")]),v._v(" 视图其实就是伪表，将编译后的SQL语句保存在数据库中，拿出只想让用户看见的字段，这就是视图。"),t("br"),v._v("\n一般来讲视图不能创建索引（因为视图本身只是一个编译后的查询语句，索引只能创建在表的列上），但是Oracle提供了一种物化视图可以创建索引（物化视图：虽然叫视图但是实际类似于表，将数据暂时存储并在基表刷新或者提交数据时刷新本视图以便与基表数据保持一致）。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("触发器 trigger：")]),v._v(" 一种特殊的存储过程，不需要调用，在满足条件时触发。"),t("br"),v._v("\n触发条件：在对某个表做insert 、 update 或delete操作之前或之后（取决于如何实现）自动执行")])])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 2. 如何调用存储过程？")]),v._v(" "),t("ol",[t("li",[v._v("JDBC中使用"),t("strong",[v._v("CallableStatement")]),v._v("执行器对象，通过"),t("code",[v._v('execute("{call  过程名(?,?)}")')]),v._v("\n的方式来调用；")]),v._v(" "),t("li",[v._v("PL/SQL Developer工具中可以通过"),t("code",[v._v("declare begin 过程名(参数);  end;")]),v._v("的方式调用；")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 3. 备份数据")]),v._v(" "),t("ol",[t("li",[v._v("第一种方式： 通过导入导出命令备份数据库中全部数据"),t("br"),v._v("\nOracle用"),t("code",[v._v("exp")]),v._v("命令导出数据，MySQL使用"),t("code",[v._v("mysqldump")]),v._v("命令备份数据")]),v._v(" "),t("li",[v._v("第二种方式： 使用工具导出数据")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 4. in与exists的区别? 那个效率更高?")]),v._v(" "),t("p",[v._v("exists效率更高")]),v._v(" "),t("ul",[t("li",[v._v("in :需要通过条件比较结果中的所有数据")]),v._v(" "),t("li",[v._v("exists: 只关心子查询能够查询出数据")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 5. 悲观锁与乐观锁?")]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("悲观锁: 在操作表时认为另外一个对表的操作会修改数据")]),v._v(" "),t("br"),v._v("\n1.所以每次在拿数据的时候都会上锁，这样别人想拿这个数据就会阻塞直到它拿到锁（共享资源每次只给一个线程使用，其它线程阻塞，用完后再把资源转让给其它线程）。"),t("br"),v._v("\n2.java中"),t("strong",[v._v("synchronized")]),v._v("和"),t("strong",[v._v("ReentrantLock")]),v._v("等独占锁就是悲观锁思想的实现。"),t("br"),v._v("\n3.传统的关系型数据库里边就用到了很多这种锁机制，比如"),t("strong",[v._v("行锁，表锁等，读锁，写锁")]),v._v("等，都是在做操作之前先上锁。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("乐观锁: 在操作表时认为别的操作不会对表有修改数据的操作")]),v._v(" "),t("br"),v._v("\n1.所以不会上锁，但是在更新的时候会判断一下在此期间别人有没有去更新这个数据，可以使用"),t("strong",[v._v("版本号机制(原子类)和CAS算法")]),v._v("实现。"),t("br"),v._v("\n2.乐观锁适用于多读的应用类型，这样可以提高吞吐量。")])])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 6. Hibernate中常见的主键增长策略？")]),v._v(" "),t("ul",[t("li",[t("em",[t("strong",[v._v("Assigned")])]),v._v(":在调用save方法之前设置，自定义主键增长方式")]),v._v(" "),t("li",[t("em",[t("strong",[v._v("Identity")])]),v._v(":建表语句必须支持auto_increment")]),v._v(" "),t("li",[t("em",[t("strong",[v._v("Sequence")])]),v._v(":指定序列生成主键")]),v._v(" "),t("li",[t("em",[t("strong",[v._v("Native")])]),v._v(":底层自动选择合适的策略")]),v._v(" "),t("li",[t("em",[t("strong",[v._v("Increment")])]),v._v("：最大值+1的方式")]),v._v(" "),t("li",[t("em",[t("strong",[v._v("Uuid")])]),v._v(":生成32为字符串")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("h2",{attrs:{id:"第四天"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第四天"}},[v._v("#")]),v._v(" 第四天")]),v._v(" "),t("p",[v._v("::: details 1. 结构化查询语言都是什么？")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("DDL")]),v._v("\talter drop truncate create")]),v._v(" "),t("li",[t("strong",[v._v("DML")]),v._v("\tinsert delete update")]),v._v(" "),t("li",[t("strong",[v._v("DQL")]),v._v("\tselect")]),v._v(" "),t("li",[t("strong",[v._v("DCL")]),v._v("\tgrant revoke")]),v._v(" "),t("li",[t("strong",[v._v("TCL")]),v._v("\tcommit rollback savepoint")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 2. drop和truncate的区别?")]),v._v(" "),t("ul",[t("li",[v._v("drop：删除表结构和表数据(如果删除表空间的话需要+purge)")]),v._v(" "),t("li",[v._v("truncate：删除表数据和表空间，会保留表结构")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 3. 组函数?多行函数?")]),v._v(" "),t("ul",[t("li",[v._v("sum() avg() count() max() min()")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 4. 怎么去重？")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("distinct")]),v._v("  专业去重(支持多列)\n"),t("code",[v._v("select distinct salary,name from student;")])]),v._v(" "),t("li",[t("strong",[v._v("group by")]),v._v("  聚合统计")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 5. 什么时候使用多表连接？什么时候使用子查询？")]),v._v(" "),t("ol",[t("li",[v._v("如果需要查询的数据在多个表中,一定要使用多表连接")]),v._v(" "),t("li",[v._v("不需要表A中的列,但是下需要表A中的条件,可以用子查询")]),v._v(" "),t("li",[v._v("子查询中如果使用了in some any all这几个关键字,效率比较低,可以转换成多表关联")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 6. 为什么要使用视图?")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("节省编译时间,提高查询效率")])]),v._v(" "),t("li",[t("strong",[v._v("屏蔽原表中的字段")]),v._v("，避免没有权限的用户查询到其他字段")]),v._v(" "),t("li",[v._v("视图的数据能够动态的来源于原表")]),v._v(" "),t("li",[v._v("简单的视图可以更新视图中的数据，复杂的视图无法更新"),t("br"),t("code",[v._v("create view 视图名 as select name from student;")])])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 7. 为什么要给普通用户创建属于自己的表空间?")]),v._v(" "),t("ol",[t("li",[v._v("项目中很有可能与其他项目使用同一个数据库,\n多个用户在使用用一个数据库时有可能访问同一个数据库文件,\n就会产生资源争用的问题。给不同的用户指定不同的表空间，\n就可以让他们使用不同的数据库文件，"),t("strong",[v._v("解决资源争用的问题")]),v._v("。")]),v._v(" "),t("li",[t("strong",[v._v("给予用户部分权限")])])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 8. 约束有哪几种?")]),v._v(" "),t("ol",[t("li",[v._v("外键约束\tforeign key references")]),v._v(" "),t("li",[v._v("唯一约束\tunique")]),v._v(" "),t("li",[v._v("非空约束\tnot null")]),v._v(" "),t("li",[v._v("主键约束\tprimary key")]),v._v(" "),t("li",[v._v("检查约束\tcheck")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 9. 索引有哪几种?")]),v._v(" "),t("ol",[t("li",[v._v("函数索引")]),v._v(" "),t("li",[v._v("普通索引 normal")]),v._v(" "),t("li",[v._v("唯一索引 unique")]),v._v(" "),t("li",[v._v("位图索引 bitmap（适合在数据量比较大，基数比较小的列  如：男/女）")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 10. 索引的优缺点?")]),v._v(" "),t("ul",[t("li",[v._v("能够更快的帮助我们"),t("strong",[v._v("提高查询效率")])]),v._v(" "),t("li",[v._v("索引会降低数据库的增删改的效率，因为数据库需要花时间去维护索引,所以"),t("strong",[v._v("索引适合数据量比较大而且数据不经常改动的列")])])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 11. sql语句怎么优化?")]),v._v(" "),t("ol",[t("li",[v._v("尽量"),t("strong",[v._v("用exists代替in")])]),v._v(" "),t("li",[v._v("合理"),t("strong",[v._v("使用索引")])]),v._v(" "),t("li",[v._v("查询多个表中的数据时,尽量用"),t("strong",[v._v("多表连接")])]),v._v(" "),t("li",[v._v("多表连接时尽量把"),t("strong",[v._v("多的数据放在where之后")])]),v._v(" "),t("li",[v._v("多表连接时尽量"),t("strong",[v._v("使用表的别名")]),v._v(",减少数据库的解析时间")]),v._v(" "),t("li",[v._v("在确保语句完整的情况下,多使用commit提交语句")]),v._v(" "),t("li",[t("strong",[v._v("优化group by")]),v._v("，将不需要的记录在group by之前过滤掉")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 12. 查询语句常见的关键字的优先级?")]),v._v(" "),t("ol",[t("li",[v._v("select  列名\t\t优先级高于order by")]),v._v(" "),t("li",[v._v("from\t表明\t\t优先级最高")]),v._v(" "),t("li",[v._v("where\t条件\t\t优先级次高")]),v._v(" "),t("li",[v._v("group by条件\t\t优先级次于where")]),v._v(" "),t("li",[v._v("having\t条件\t\t优先级一定在group by之后")]),v._v(" "),t("li",[v._v("order by分组\t\t优先级最低")])]),v._v(" "),t("p",[v._v(":::")]),v._v(" "),t("p",[v._v("::: details 13. Oracle分页")]),v._v(" "),t("p",[v._v("​\t"),t("code",[v._v("rownum")]),v._v("，这是Oracle对动态查询结果的编号，用来实现分页查询有序的整数列，每多一条自动加1")]),v._v(" "),t("ol",[t("li",[v._v("不能和 group by 在同一个查询语句中")]),v._v(" "),t("li",[v._v("不能用 表名.rownum")]),v._v(" "),t("li",[v._v("它肯定是从1开始")])]),v._v(" "),t("ul",[t("li",[v._v("编号21-30，实现排序效果的分页")])]),v._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("select")]),v._v(" rownum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("*")]),v._v("\n   \t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("from")]),v._v("\n   \t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("select")]),v._v(" rownum rn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("*")]),v._v(" \n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("from")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("select")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("*")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("from")]),v._v(" student "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("order")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("by")]),v._v(" salary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" b\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("where")]),v._v(" rownum "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("<=")]),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" a\n   \t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("where")]),v._v("\n   \t\ta"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("rn "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v(">=")]),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("21")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br"),t("span",{staticClass:"line-number"},[v._v("6")]),t("br"),t("span",{staticClass:"line-number"},[v._v("7")]),t("br")])]),t("p",[v._v(":::")])],1)}),[],!1,null,null,null);_.default=e.exports}}]);